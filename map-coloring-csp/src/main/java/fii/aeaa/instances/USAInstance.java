package fii.aeaa.instances;

import fii.aeaa.constraints.binary.core.BinaryConstraint;
import fii.aeaa.constraints.managers.GraphConstraintManagerImpl;
import fii.aeaa.models.Graph;
import fii.aeaa.models.Node;
import fii.aeaa.utils.ConstraintCreator;
import fii.aeaa.utils.DomainCreator;

import java.util.Set;

public class USAInstance extends TestInstance{
    @Override
    protected void initGraph() {
        graph = new Graph();
        Node Washington = new Node("Washington");
        Node Oregon = new Node("Oregon");
        Node California = new Node("California");
        Node Arizona = new Node("Arizona");
        Node NewMexico = new Node("NewMexico");
        Node Texas = new Node("Texas");
        Node Louisiana = new Node("Louisiana");
        Node Mississippi = new Node("Mississippi");
        Node Alabama = new Node("Alabama");
        Node Georgia = new Node("Georgia");
        Node Florida = new Node("Florida");
        Node SouthCarolina = new Node("SouthCarolina");
        Node NorthCarolina = new Node("NorthCarolina");
        Node Virginia = new Node("Virginia");
        Node WestVirginia = new Node("WestVirginia");
        Node Maryland = new Node("Maryland");
        Node Delaware = new Node("Delaware");
        Node NewJersey = new Node("NewJersey");
        Node Pennsylvania = new Node("Pennsylvania");
        Node NewYork = new Node("NewYork");
        Node Connecticut = new Node("Connecticut");
        Node RhodeIsland = new Node("RhodeIsland");
        Node Massachusetts = new Node("Massachusetts");
        Node Vermont = new Node("Vermont");
        Node Maine = new Node("Maine");
        Node NewHampshire = new Node("NewHampshire");
        Node Ohio = new Node("Ohio");
        Node Michigan = new Node("Michigan");
        Node Wisconsin = new Node("Wisconsin");
        Node Minnesota = new Node("Minnesota");
        Node NorthDakota = new Node("NorthDakota");
        Node Montana = new Node("Montana");
        Node Idaho = new Node("Idaho");
        Node Nevada = new Node("Nevada");
        Node Utah = new Node("Utah");
        Node Wyoming = new Node("Wyoming");
        Node Colorado = new Node("Colorado");
        Node Oklahoma = new Node("Oklahoma");
        Node Kansas = new Node("Kansas");
        Node Nebraska = new Node("Nebraska");
        Node SouthDakota = new Node("SouthDakota");
        Node Iowa = new Node("Iowa");
        Node Missouri = new Node("Missouri");
        Node Arkansas = new Node("Arkansas");
        Node Tennessee = new Node("Tennessee");
        Node Kentucky = new Node("Kentucky");
        Node Illinois = new Node("Illinois");
        Node Indiana = new Node("Indiana");
        Node Alaska = new Node("Alaska");
        Node Hawaii = new Node("Hawaii");

        graph.addNode(Washington);
        graph.addNode(Oregon);
        graph.addNode(California);
        graph.addNode(Arizona);
        graph.addNode(NewMexico);
        graph.addNode(Texas);
        graph.addNode(Louisiana);
        graph.addNode(Mississippi);
        graph.addNode(Alabama);
        graph.addNode(Georgia);
        graph.addNode(Florida);
        graph.addNode(SouthCarolina);
        graph.addNode(NorthCarolina);
        graph.addNode(Virginia);
        graph.addNode(WestVirginia);
        graph.addNode(Maryland);
        graph.addNode(Delaware);
        graph.addNode(NewJersey);
        graph.addNode(Pennsylvania);
        graph.addNode(NewYork);
        graph.addNode(Connecticut);
        graph.addNode(RhodeIsland);
        graph.addNode(Massachusetts);
        graph.addNode(Vermont);
        graph.addNode(Maine);
        graph.addNode(NewHampshire);
        graph.addNode(Ohio);
        graph.addNode(Michigan);
        graph.addNode(Wisconsin);
        graph.addNode(Minnesota);
        graph.addNode(NorthDakota);
        graph.addNode(Montana);
        graph.addNode(Idaho);
        graph.addNode(Nevada);
        graph.addNode(Utah);
        graph.addNode(Wyoming);
        graph.addNode(Colorado);
        graph.addNode(Oklahoma);
        graph.addNode(Kansas);
        graph.addNode(Nebraska);
        graph.addNode(SouthDakota);
        graph.addNode(Iowa);
        graph.addNode(Missouri);
        graph.addNode(Arkansas);
        graph.addNode(Tennessee);
        graph.addNode(Kentucky);
        graph.addNode(Illinois);
        graph.addNode(Indiana);
        graph.addNode(Alaska);
        graph.addNode(Hawaii);

        graph.addEdge(Washington, Oregon);
        graph.addEdge(Washington, Idaho);
        graph.addEdge(Oregon, California);
        graph.addEdge(Oregon, Nevada);
        graph.addEdge(Oregon, Idaho);
        graph.addEdge(Idaho, Montana);
        graph.addEdge(Idaho, Nevada);
        graph.addEdge(Idaho, Wyoming);
        graph.addEdge(Idaho, Utah);
        graph.addEdge(California, Nevada);
        graph.addEdge(California, Arizona);
        graph.addEdge(Nevada, Utah);
        graph.addEdge(Arizona, Utah);
        graph.addEdge(Arizona, NewMexico);
        graph.addEdge(Arizona, Colorado);
        graph.addEdge(Utah, Colorado);
        graph.addEdge(Utah, Wyoming);
        graph.addEdge(Wyoming, Montana);
        graph.addEdge(Montana, NorthDakota);
        graph.addEdge(Montana, SouthDakota);
        graph.addEdge(Wyoming, SouthDakota);
        graph.addEdge(Wyoming, Nebraska);
        graph.addEdge(Wyoming, Colorado);
        graph.addEdge(Colorado, NewMexico);
        graph.addEdge(Colorado, Nebraska);
        graph.addEdge(Colorado, Kansas);
        graph.addEdge(Colorado, Oklahoma);
        graph.addEdge(NewMexico, Texas);
        graph.addEdge(NewMexico, Oklahoma);
        graph.addEdge(Texas, Oklahoma);
        graph.addEdge(Texas, Louisiana);
        graph.addEdge(Texas, Arkansas);
        graph.addEdge(Louisiana, Arkansas);
        graph.addEdge(Louisiana, Mississippi);
        graph.addEdge(Oklahoma, Kansas);
        graph.addEdge(Oklahoma, Missouri);
        graph.addEdge(Oklahoma, Arkansas);
        graph.addEdge(Kansas, Nebraska);
        graph.addEdge(Kansas, Missouri);
        graph.addEdge(Nebraska, SouthDakota);
        graph.addEdge(Nebraska, Iowa);
        graph.addEdge(Nebraska, Missouri);
        graph.addEdge(SouthDakota, NorthDakota);
        graph.addEdge(SouthDakota, Minnesota);
        graph.addEdge(SouthDakota, Iowa);
        graph.addEdge(Missouri, Arkansas);
        graph.addEdge(Missouri, Tennessee);
        graph.addEdge(Missouri, Illinois);
        graph.addEdge(Missouri, Iowa);
        graph.addEdge(Missouri, Kentucky);
        graph.addEdge(Iowa, Minnesota);
        graph.addEdge(Iowa, Wisconsin);
        graph.addEdge(Iowa, Illinois);
        graph.addEdge(Minnesota, NorthDakota);
        graph.addEdge(Minnesota, Wisconsin);
        graph.addEdge(Wisconsin, Illinois);
        graph.addEdge(Wisconsin, Michigan);
        graph.addEdge(Illinois, Indiana);
        graph.addEdge(Illinois, Kentucky);
        graph.addEdge(Arkansas, Mississippi);
        graph.addEdge(Arkansas, Tennessee);
        graph.addEdge(Mississippi, Tennessee);
        graph.addEdge(Mississippi, Alabama);
        graph.addEdge(Alabama, Tennessee);
        graph.addEdge(Alabama, Florida);
        graph.addEdge(Alabama, Georgia);
        graph.addEdge(Tennessee, Kentucky);
        graph.addEdge(Tennessee, Georgia);
        graph.addEdge(Tennessee, NorthCarolina);
        graph.addEdge(Tennessee, Virginia);
        graph.addEdge(Indiana, Michigan);
        graph.addEdge(Indiana, Kentucky);
        graph.addEdge(Indiana, Ohio);
        graph.addEdge(Kentucky, Ohio);
        graph.addEdge(Kentucky, WestVirginia);
        graph.addEdge(Kentucky, Virginia);
        graph.addEdge(Georgia, NorthCarolina);
        graph.addEdge(Georgia, SouthCarolina);
        graph.addEdge(Georgia, Florida);
        graph.addEdge(SouthCarolina, NorthCarolina);
        graph.addEdge(NorthCarolina, Virginia);
        graph.addEdge(Virginia, WestVirginia);
        graph.addEdge(Virginia, Maryland);
        graph.addEdge(WestVirginia, Ohio);
        graph.addEdge(WestVirginia, Pennsylvania);
        graph.addEdge(WestVirginia, Maryland);
        graph.addEdge(Ohio, Michigan);
        graph.addEdge(Ohio, Pennsylvania);
        graph.addEdge(Pennsylvania, NewYork);
        graph.addEdge(Pennsylvania, NewJersey);
        graph.addEdge(Pennsylvania, Maryland);
        graph.addEdge(NewYork, Vermont);
        graph.addEdge(NewYork, Massachusetts);
        graph.addEdge(NewYork, Connecticut);
        graph.addEdge(NewYork, NewJersey);
        graph.addEdge(Maryland, Delaware);
        graph.addEdge(Pennsylvania, Delaware);
        graph.addEdge(NewJersey, Delaware);
        graph.addEdge(Connecticut, Massachusetts);
        graph.addEdge(Connecticut, RhodeIsland);
        graph.addEdge(Massachusetts, Vermont);
        graph.addEdge(Massachusetts, NewHampshire);
        graph.addEdge(Massachusetts, RhodeIsland);
        graph.addEdge(Vermont, NewHampshire);
        graph.addEdge(NewHampshire, Maine);

        DomainCreator.createDomainFourColors(graph.getNodesDFS());
    }

    @Override
    protected void initConstraintManager() {
        Set<BinaryConstraint> binaryConstraintSet = ConstraintCreator.createAdjacencyConstraints(graph);
//        binaryConstraintSet.add(new DifferentColorBinaryConstraint(graph.getNodeByName("NewMexico"), graph.getNodeByName("Kansas")));
//        binaryConstraintSet.add(new DifferentColorBinaryConstraint(graph.getNodeByName("Washington"), graph.getNodeByName("Nevada")));
//        binaryConstraintSet.add(new DifferentColorBinaryConstraint(graph.getNodeByName("Alabama"), graph.getNodeByName("Arkansas")));
//        binaryConstraintSet.add(new DifferentColorBinaryConstraint(graph.getNodeByName("Florida"), graph.getNodeByName("Delaware")));
//        binaryConstraintSet.add(new ExactColorBinaryConstraint(graph.getNodeByName("WestVirginia"), graph.getNodeByName("Vermont")));
//        binaryConstraintSet.add(new ExactColorBinaryConstraint(graph.getNodeByName("Alaska"), graph.getNodeByName("Missouri")));
//        binaryConstraintSet.add(new ExactColorBinaryConstraint(graph.getNodeByName("Massachusetts"), graph.getNodeByName("Texas")));

        graphConstraintManager = new GraphConstraintManagerImpl()
                .withBinaryConstraints(binaryConstraintSet)
                .build();
    }
}
